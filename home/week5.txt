1.   Algorithm complexity - big O notation
     By Time      By Data

       Algorithms              Algorithm complexity
           search              Time           Data
               linear search - O(N)            1
               binary search - O(logN)         1
           sort
               bubble sort    |
               insertion sort |} O(N^2)        1
               selection sort |

     Generics in Java

     Exception
        Hierarchy
        'throw'
        Checked(throws or try-catch) and Unchecked

     TDD
        first tests then implementation

     Wrappers in Java


2.    finish methods in the ua.artcode.algo.search.BinarySearch.java
        https://www.cs.usfca.edu/~galles/visualization/Search.html


3. Add to previous homework(data_structures)
    - generics
    - exception
    - unit test see exapmle ua.artcode.week5.day1.test
        write speed test for comparing structures
           a) based on Nodes
           b) based on array

4. Write speed test for above sorting algorithms


* - Additional
4*.  Indexing(right order helps while searching -> example binarySearh) - Data Structures
        https://www.cs.usfca.edu/~galles/visualization/Search.html
        https://www.cs.usfca.edu/~galles/visualization/OpenHash.html
        https://www.cs.usfca.edu/~galles/visualization/BST.html http://visualgo.net/bst.html

                        HashMap, TreeMap
                insert  O(1)        O(logN)
                delete  O(1)        O(logN)
                find    O(1)        O(logN)

                Collections in java

            http://www.codejava.net/images/articles/javacore/collections/collections%20framework%20overview.png
            remember all methods in interfaces Collection -> Set,List,Queue; Map
        	http://habrahabr.ru/post/127864/
        	http://habrahabr.ru/post/128269/
        	http://habrahabr.ru/post/128017/
        	http://habrahabr.ru/post/129037/
